// <auto-generated />
using System;
using DebbieKitchen.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DebbieKitchen.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DebbieKitchen.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("DebbieKitchen.Models.Association", b =>
                {
                    b.Property<int>("AssociationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("AssociationId");

                    b.HasIndex("AdminId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Associations");
                });

            modelBuilder.Entity("DebbieKitchen.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryImg")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CategoryId");

                    b.HasIndex("AdminId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DebbieKitchen.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AdditionalTimeInMinutes")
                        .HasColumnType("int");

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<int>("CookTimeInMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PrepTimeInMinutes")
                        .HasColumnType("int");

                    b.Property<string>("RecipeImg")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RecipeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Serving")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("RecipeId");

                    b.HasIndex("AdminId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("DebbieKitchen.Models.SaveRecipe", b =>
                {
                    b.Property<int>("SaveRecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SaveRecipeId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("SavedRecipes");
                });

            modelBuilder.Entity("DebbieKitchen.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DebbieKitchen.Models.UserComment", b =>
                {
                    b.Property<int>("UserCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserCommentId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserComments");
                });

            modelBuilder.Entity("DebbieKitchen.Models.UserLike", b =>
                {
                    b.Property<int>("UserLikeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserLikeId");

                    b.HasIndex("AdminId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserLikes");
                });

            modelBuilder.Entity("DebbieKitchen.Models.Association", b =>
                {
                    b.HasOne("DebbieKitchen.Models.Admin", "Creator")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DebbieKitchen.Models.Category", "Category")
                        .WithMany("AssociatedRecipes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DebbieKitchen.Models.Recipe", "Recipe")
                        .WithMany("AssociatedCategories")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Creator");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("DebbieKitchen.Models.Category", b =>
                {
                    b.HasOne("DebbieKitchen.Models.Admin", "Creator")
                        .WithMany("AllCategories")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DebbieKitchen.Models.Recipe", null)
                        .WithMany("AllCategories")
                        .HasForeignKey("RecipeId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("DebbieKitchen.Models.Recipe", b =>
                {
                    b.HasOne("DebbieKitchen.Models.Admin", "Creator")
                        .WithMany("AllRecipes")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("DebbieKitchen.Models.SaveRecipe", b =>
                {
                    b.HasOne("DebbieKitchen.Models.Recipe", "SavedRecipe")
                        .WithMany("SavedRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DebbieKitchen.Models.User", "Savedby")
                        .WithMany("SavedRecipes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SavedRecipe");

                    b.Navigation("Savedby");
                });

            modelBuilder.Entity("DebbieKitchen.Models.User", b =>
                {
                    b.HasOne("DebbieKitchen.Models.Recipe", null)
                        .WithMany("Users")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("DebbieKitchen.Models.UserComment", b =>
                {
                    b.HasOne("DebbieKitchen.Models.Recipe", "CommentedRecipe")
                        .WithMany("UserComments")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DebbieKitchen.Models.User", "Commenter")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommentedRecipe");

                    b.Navigation("Commenter");
                });

            modelBuilder.Entity("DebbieKitchen.Models.UserLike", b =>
                {
                    b.HasOne("DebbieKitchen.Models.Admin", null)
                        .WithMany("UserLikes")
                        .HasForeignKey("AdminId");

                    b.HasOne("DebbieKitchen.Models.Recipe", "LikedRecipe")
                        .WithMany("UserLikes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DebbieKitchen.Models.User", "Likedby")
                        .WithMany("LikedRecipes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LikedRecipe");

                    b.Navigation("Likedby");
                });

            modelBuilder.Entity("DebbieKitchen.Models.Admin", b =>
                {
                    b.Navigation("AllCategories");

                    b.Navigation("AllRecipes");

                    b.Navigation("UserLikes");
                });

            modelBuilder.Entity("DebbieKitchen.Models.Category", b =>
                {
                    b.Navigation("AssociatedRecipes");
                });

            modelBuilder.Entity("DebbieKitchen.Models.Recipe", b =>
                {
                    b.Navigation("AllCategories");

                    b.Navigation("AssociatedCategories");

                    b.Navigation("SavedRecipes");

                    b.Navigation("UserComments");

                    b.Navigation("UserLikes");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("DebbieKitchen.Models.User", b =>
                {
                    b.Navigation("LikedRecipes");

                    b.Navigation("SavedRecipes");
                });
#pragma warning restore 612, 618
        }
    }
}
